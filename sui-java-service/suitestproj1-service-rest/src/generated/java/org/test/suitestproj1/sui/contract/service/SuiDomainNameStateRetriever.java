// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suitestproj1.sui.contract.service;

import com.github.wubuku.sui.bean.*;
import com.github.wubuku.sui.utils.*;
import org.test.suitestproj1.domain.domainname.*;
import org.test.suitestproj1.domain.*;
import org.test.suitestproj1.sui.contract.DomainBeanUtils;
import org.test.suitestproj1.sui.contract.DomainName;

import java.util.*;
import java.math.*;
import java.util.function.*;

public class SuiDomainNameStateRetriever {

    private SuiJsonRpcClient suiJsonRpcClient;

    private Function<DomainNameId, DomainNameState.MutableDomainNameState> domainNameStateFactory;

    public SuiDomainNameStateRetriever(SuiJsonRpcClient suiJsonRpcClient,
                                  Function<DomainNameId, DomainNameState.MutableDomainNameState> domainNameStateFactory
    ) {
        this.suiJsonRpcClient = suiJsonRpcClient;
        this.domainNameStateFactory = domainNameStateFactory;
    }

    public DomainNameState retrieveDomainNameState(String objectId) {
        SuiMoveObjectResponse<DomainName> getObjectDataResponse = suiJsonRpcClient.getMoveObject(
                objectId, new SuiObjectDataOptions(true, true, true, true, true, true, true), DomainName.class
        );

        DomainName domainName = getObjectDataResponse.getData().getContent().getFields();
        return toDomainNameState(domainName);
    }

    private DomainNameState toDomainNameState(DomainName domainName) {
        DomainNameState.MutableDomainNameState domainNameState = domainNameStateFactory.apply(DomainBeanUtils.toDomainNameId(domainName.getDomainNameId()));
        domainNameState.setId_(domainName.getId().getId());
        domainNameState.setVersion(domainName.getVersion());
        domainNameState.setExpirationDate(domainName.getExpirationDate());
        return domainNameState;
    }

    
}

